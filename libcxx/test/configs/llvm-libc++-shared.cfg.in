# This testing configuration handles running the test suite against LLVM's libc++
# using a shared library.

lit_config.load_config(config, '@CMAKE_CURRENT_BINARY_DIR@/cmake-bridge.cfg')

import os, site
site.addsitedir(os.path.join('@LIBCXX_SOURCE_DIR@', 'utils'))
import libcxx.test.params, libcxx.test.config, libcxx.test.dsl
ADDITIONAL_PARAMETERS = [
    libcxx.test.dsl.Parameter(name='prefix', type=str,
        actions=lambda path: [libcxx.test.dsl.AddSubstitution('%{prefix}', path)],
        help="""
        Prefix to a pre-installed root of libc++. The test suite will be built and run against it.
        """),
]

sysroot = ' -isysroot {}'.format('@CMAKE_OSX_SYSROOT@') if '@CMAKE_OSX_SYSROOT@' else ''
config.substitutions.append(('%{flags}', '-pthread' + sysroot))

config.substitutions.append(('%{compile_flags}',
    '-nostdinc++ -I %{prefix}/include/c++/v1 -I %{libcxx-dir}/test/support'
))

config.substitutions.append(('%{link_flags}',
    '-nostdlib++ -L %{prefix}/lib -Wl,-rpath,%{prefix}/lib -lc++'
))

config.substitutions.append(('%{exec}',
    '%{executor} --execdir %T -- '
))

import os, site
site.addsitedir(os.path.join('@LIBCXX_SOURCE_DIR@', 'utils'))
import libcxx.test.params, libcxx.test.config
libcxx.test.config.configure(
    libcxx.test.params.DEFAULT_PARAMETERS + ADDITIONAL_PARAMETERS,
    libcxx.test.features.DEFAULT_FEATURES,
    config,
    lit_config
)
